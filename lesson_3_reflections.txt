When would you want to use a remote repository rather than keeping all your work local?

I would always want to keep a remote repository because I tend to work from more than one
computer. It's also useful when collaborating with other people because we can each work
from our own machines instead of sharing one to work locally.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

I wouldn't want Git to override changes that I've made locally that haven't been pushed
to the remote repository and this is also an aspect that I want to have complete control
of because Git isn't intelligent enough to handle all possible conflicts that may arise.

Describe the differences between forks, clones, and branches. When would you use one
instead of another?

A fork is a copy of someone else's repository on Github that you clone under your profile.
A branch is a sort of linked-list of versions of the same system. You can have you system
version branch multiple times on any commit. A clone is a copy of a repository.

What is the benefit of having a copy of the last known state of the remote stored locally?

If you haven't pushed to or pulled from the remote in a while, it's nice to be able to fetch
the latest state of the remote just to be aware of changes since you last interacted with
it.

 How would you collaborate without using Git or Github? What would be easier, and what would
 be harder?

Without Git, I would probably use Microsoft's Onedrive to store the files for projects. the
automatic sync to all of my computers would be useful since I run Windows on all of my machines,
but then it wouldn't be as useful to team members with other OS's. Also, I wouldn't be able to
take advantage of Git's powerful version control system and reverting significant changes
would be a painful process.